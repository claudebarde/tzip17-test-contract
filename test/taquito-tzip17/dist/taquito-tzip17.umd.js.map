{"version":3,"file":"taquito-tzip17.umd.js","sources":["../src/taquito-tzip17.ts"],"sourcesContent":["import { Context, ContractAbstraction, ContractMethod, ContractProvider, Wallet } from \"@taquito/taquito\";\nimport { buf2hex } from \"@taquito/utils\";\nimport { blake2b } from \"blakejs\";\nimport { MichelsonData, packDataBytes } from \"@taquito/michel-codec\";\n\nconst sigParamData = (chainId: string, contractAddress: string, counter: string, methodHash: string): MichelsonData => {\n  return {\n    prim: \"Pair\",\n    args: [\n      {\n        prim: \"Pair\",\n        args: [\n          {\n            string: chainId\n          },\n          {\n            string: contractAddress\n          }\n        ]\n      },\n      {\n        prim: \"Pair\",\n        args: [\n          {\n            int: counter\n          },\n          {\n            bytes: methodHash\n          }\n        ]\n      }\n    ]\n  }\n};\n\nconst sigParamType: any = {\n  prim: \"pair\",\n  args: [\n    {\n      prim: \"pair\",\n      args: [\n        {\n          prim: \"chain_id\"\n        },\n        { prim: \"address\" }\n      ]\n    },\n    {\n      prim: \"pair\",\n      args: [{ prim: \"nat\" }, { prim: \"bytes\" }]\n    }\n  ]\n};\n\nclass ContractMethodTzip17<T extends ContractProvider | Wallet> {\n\n  constructor(\n    private context: Context,\n    private contractAbs: ContractAbstraction<T>,\n    private method: (...args: any[]) => ContractMethod<T>,\n    private parameterType: object,\n    private args: any[]\n  ) { }\n  async createPermit() {\n    const methodHash = await this.prepareMethodHash();\n    const packedData = await this.packData(methodHash);\n    const signature = await this.context.signer.sign(packedData.bytes);\n    const publicKey = await this.context.signer.publicKey();\n    return { publicKey, signature: signature.sig, methodHash }\n\n  }\n  private createTransferParam() {\n    return this.method(...this.args).toTransferParams().parameter?.value;\n  }\n\n  private async packTransfeerParam() {\n    const rawPacked = await this.context.packer.packData({\n      data: this.createTransferParam()!,\n      type: this.parameterType\n    });\n    return rawPacked.packed;\n  }\n\n  private async prepareMethodHash() {\n    const packedParam = await this.packTransfeerParam();\n    return buf2hex(Buffer.from(blake2b(packedParam)));\n  }\n\n  private async packData(methodHash: string) {\n    const chainId = await this.context.rpc.getChainId();\n    const contractStorage: any = await this.contractAbs.storage();\n    const counter = contractStorage.counter;\n    return packDataBytes(sigParamData(chainId, this.contractAbs.address, counter, methodHash), sigParamType);\n  }\n}\n\nexport class Tzip17ContractAbstraction {\n  methods: { [key: string]: (...args: any[]) => ContractMethodTzip17<ContractProvider | Wallet> } = {};\n  constructor(\n    private contractAbstraction: ContractAbstraction<ContractProvider | Wallet>,\n    private context: Context\n  ) {\n    for (let method in this.contractAbstraction.methods) {\n      const methodFx = (...args: any[]) => {\n        return new ContractMethodTzip17<ContractProvider | Wallet>(\n          context,\n          this.contractAbstraction,\n          this.contractAbstraction.methods[method],\n          this.contractAbstraction.entrypoints.entrypoints[method],\n          args\n        )\n      }\n      this.methods[method] = methodFx\n    }\n  }\n}\n"],"names":["buf2hex","blake2b","packDataBytes"],"mappings":"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"}